name: Android Integration Test
on:
  workflow_call:
    inputs:
      flutter_channel:
        required: false
        type: string
        default: "stable"
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      FLAVOUR:
        required: true
        type: string
        default: "production"

env:
  GITHUB_OUTPUT: ${{github.workspace}}/.github/workflows/output.txt
permissions:
  id-token: write
  contents: read

jobs:
  integration_test:
    name: üß™ Run Integration Tests
    timeout-minutes: 30
    runs-on: ${{inputs.runs_on}}
    environment: ${{inputs.FLAVOUR}}
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4.1.1

      - name: Decrypt Android keys
        run: sh ./.github/scripts/decrypt_android_keys.sh
        env:
          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}

      - name: üéØ Setup Flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          architecture: x64
          flutter-version: ${{ vars.FLUTTER_FRAMEWORK_VERSION }}

      - name: üì¶ Flutter Pub Get
        run: flutter pub get

      - name: ‚öôÔ∏è Generate Build Files
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: üî® Build APK for Firebase TestLab
        run: |
          pushd android
          flutter build apk --debug --flavor ${{inputs.FLAVOUR}} -t lib/main_${{inputs.FLAVOUR}}.dart --dart-define=FLAVOUR=${{inputs.FLAVOUR}}
          
          FLAVOUR_LOWERCASE="${{ inputs.FLAVOUR }}"
          FLAVOUR_CAPITALIZED="${FLAVOUR_LOWERCASE^}"

          ./gradlew app:assemble${FLAVOUR_CAPITALIZED}AndroidTest
          ./gradlew app:assemble${FLAVOUR_CAPITALIZED}Debug -Ptarget="integration_test/discounts_test.dart"
          popd

      - name: ‚òÅÔ∏è Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.1.0
        with:
          project_id: ${{ vars.FIREBASE_PROJECT_ID }}

      - name: üîë Download Google Cloud Config
        id: gcloud_config
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: integration_test_gcloud.json
          encodedString: ${{ secrets.INTEGRATION_TEST_GCLOUD_CONFIG }}

      - name: Upload To Firebase Test Lab
        run: |
          gcloud auth activate-service-account --key-file="${{ steps.gcloud_config.outputs.filePath }}"
          # Re-typed command CAREFULLY, using single quotes for paths, and --verbosity=debug
          gcloud firebase test android run \
            --type=instrumentation \
            --app 'build/app/outputs/apk/${{inputs.FLAVOUR}}/debug/app-${{inputs.FLAVOUR}}-debug.apk' \
            --test 'buildbuild/app/outputs/apk/androidTest/${{inputs.FLAVOUR}}/debug/app-${{inputs.FLAVOUR}}-debug-androidTest.apk' \
            --device-ids=MediumPhone.arm \
            --os-version-ids=33 \
            --orientations=portrait \
            --use-orchestrator \
            --timeout 3m

  notify:
    name: üì¢ Send Notification
    if: always() # Ensures this job runs regardless of the completion status of dependent jobs
    needs:
      - integration_test
    uses: ./.github/workflows/notification.yml
    secrets: inherit
    with:
      job_status: ${{ needs.integration_test.result }}
      workflow: ${{ github.workflow }}
      runs_on: ${{inputs.runs_on}}