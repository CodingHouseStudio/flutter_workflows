name: Cloudflare Deployments Cleaner

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
        default: "veteran-development"
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"

env:
  GITHUB_OUTPUT: ${{github.workspace}}/.github/workflows/output.txt
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_VETERANAM }}

jobs:
  clean_cloudflare_deployments:
    timeout-minutes: 15
    runs-on: ${{inputs.runs_on}}
    steps:
      - name: Remove all deployments except active ones
        env:
          CLOUDFLARE_API_TOKEN: ${{secrets.API_TOKEN}}
          CLOUDFLARE_ACCOUNT_ID: ${{secrets.ACCOUNT_ID}}
          CLOUDFLARE_PROJECT_NAME: ${{inputs.project_name}}
        run: |
          echo "Fetching all deployments from Cloudflare API..."
          # Fetch all deployments from Cloudflare API
          deployments_response=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/pages/projects/$CLOUDFLARE_PROJECT_NAME/deployments" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN")
          
          echo "All deployments retrieved."

          # Extract IDs of active deployments
          echo "Extracting active deployment IDs..."
          active_deployment_ids=$(echo "$deployments_response" | jq -r '.result[] | select(.aliases != null) | .id')

          echo "Active deployment IDs: $active_deployment_ids"

          # Loop through each deployment and delete inactive ones
          echo "Starting cleanup of inactive deployments..."
          for deployment_id in $(echo "$deployments_response" | jq -r '.result[].id'); do
            if echo "$active_deployment_ids" | grep -q "$deployment_id"; then
              echo "Skipping active deployment ID: $deployment_id"
            else
              echo "Deleting inactive deployment ID: $deployment_id"
              deletion_response=$(curl -s -X DELETE "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/pages/projects/$CLOUDFLARE_PROJECT_NAME/deployments/$deployment_id" \
                -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN")
              echo "Deletion response: $deletion_response"
            fi
          done

          echo "Cleanup process completed."
