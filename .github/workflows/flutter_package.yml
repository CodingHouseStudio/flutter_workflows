name: Flutter Package Workflow

on:
  workflow_call:
    inputs:
      analyze_directories:
        required: false
        type: string
        default: "lib test"
      concurrency:
        required: false
        type: number
        default: 4
      coverage_excludes:
        required: false
        type: string
        default: "lib/firebase_options_development.dart lib/l10n/l10n.dart lib/bootstrap.dart lib/shared/helper/get_it_service_locator.dart lib/shared/constants/theme_constant.dart lib/shared/constants/variables_constant.dart lib/shared/constants/* *.g.dart *.freezed.dart lib/shared/navigation/* lib/shared/data_provider/* */blocprovider/*.dart lib/shared/widget/card_add_image_widget.dart lib/shared/widget/image_widget.dart lib/shared/widget/user_photo_widget.dart lib/shared/bloc/authentication/authentication_state.dart lib/shared/bloc/authentication/listenable.dart lib/shared/extension/*.dart lib/shared/repositories/url_repository.dart lib/shared/bloc/authentication/authentication_event.dart lib/shared/repositories/firebase_module.dart lib/shared/repositories/network_module.dart lib/shared/widget/dilog_page_widget.dart lib/shared/widget/keyboard_scroll_view.dart lib/shared/widget/network_image_widget.dart lib/app.dart lib/components/story_add/widget/field_widget.dart lib/shared/models/failure_model/exceptions.dart lib/shared/widget/info_version_widget.dart lib/shared/widget/row_sliver_widget.dart lib/shared/widget/viewpager_indicator_widget.dart lib/shared/repositories/messaging_module.dart lib/shared/repositories/app_info_repository.dart lib/shared/repositories/failure_repository.dart lib/shared/repositories/failure_module.dart lib/shared/widget/popup_menu_item_widget.dart lib/shared/repositories/data_picker_module.dart lib/shared/repositories/mobile_rating_module.dart"
      flutter_channel:
        required: false
        type: string
        default: "stable"
      flutter_version:
        required: false
        type: string
        default: "3.24.0"
      format_directories:
        required: false
        type: string
        default: "lib test"
      format_line_length:
        required: false
        type: string
        default: "80"
      min_coverage:
        required: false
        type: number
        default: 100
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      setup:
        required: false
        type: string
        default: ""
      test_optimization:
        required: false
        type: boolean
        default: true
      test_recursion:
        required: false
        type: boolean
        default: false
      working_directory:
        required: false
        type: string
        default: "."
      package_get_excludes:
        required: false
        type: string
        default: "!*"
    secrets:
      ssh_key:
        required: false
env:
  GITHUB_OUTPUT: ${{github.workspace}}/.github/workflows/output.txt
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_VETERANAM }}
permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout

jobs:
  build:
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}
    runs-on: ${{inputs.runs_on}}
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: subosito/flutter-action@v2.12.0
        with:
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64
          flutter-version: ${{inputs.flutter_version}}
      - name: ü§´ Set SSH Key
        env:
          ssh_key: ${{secrets.ssh_key}}
        if: env.ssh_key != null
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{secrets.ssh_key}}

      - name: üì¶ Install Dependencies
        run: |
          flutter pub get
      - run: |
          flutter pub run build_runner build --delete-conflicting-outputs
      - run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive --ignore=${{inputs.package_get_excludes}}

      - name: ‚öôÔ∏è Run Setup
        if: "${{inputs.setup != ''}}"
        run: ${{inputs.setup}}

      - name: ‚ú® Check Formatting
        run: dart format --line-length ${{inputs.format_line_length}} --set-exit-if-changed ${{inputs.format_directories}}

      - name: üïµÔ∏è Analyze
        run: flutter analyze ${{inputs.analyze_directories}}

      - name: üß™ Run Tests
        run: very_good test -j ${{inputs.concurrency}} ${{(inputs.test_recursion && '--recursive') || ''}} ${{(inputs.test_optimization && '--optimization') || '--no-optimization'}} --coverage --test-randomize-ordering-seed random

      - name: üìä Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3
        with:
          path: ${{inputs.working_directory}}/coverage/lcov.info
          exclude: ${{inputs.coverage_excludes}}
          min_coverage: ${{inputs.min_coverage}}
  notify:
    if: always()
    needs: build
    uses: ./.github/workflows/slack-notification.yml
    with:
      job_status: ${{ needs.build.result }}
      repository: ${{ github.repository }}
      branch: ${{ github.ref_name }}
