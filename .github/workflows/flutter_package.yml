name: Flutter Package Workflow

on:
  workflow_call:
    inputs:
      analyze_directories:
        required: false
        type: string
        default: "lib test"
      concurrency:
        required: false
        type: number
        default: 4
      coverage_excludes:
        required: false
        type: string
        default: ""
      flutter_channel:
        required: false
        type: string
        default: "stable"
      flutter_version:
        required: false
        type: string
        default: ""
      format_directories:
        required: false
        type: string
        default: "lib test"
      format_line_length:
        required: false
        type: string
        default: "80"
      min_coverage:
        required: false
        type: number
        default: 100
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      setup:
        required: false
        type: string
        default: ""
      test_optimization:
        required: false
        type: boolean
        default: true
      test_recursion:
        required: false
        type: boolean
        default: false
      working_directory:
        required: false
        type: string
        default: "."
      package_get_excludes:
        required: false
        type: string
        default: "!*"
    secrets:
      ssh_key:
        required: false
env:
  GITHUB_OUTPUT: ${{github.workspace}}/.github/workflows/output.txt
  FLUTTER_VERSION: 3.13.9
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: write    # This is required for actions/checkout

jobs:
  build:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ${{inputs.runs_on}}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{inputs.flutter_version}}
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: 🤫 Set SSH Key
        env:
          ssh_key: ${{secrets.ssh_key}}
        if: env.ssh_key != null
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{secrets.ssh_key}}

      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive --ignore=${{inputs.package_get_excludes}}

      - name: ⚙️ Run Setup
        if: "${{inputs.setup != ''}}"
        run: ${{inputs.setup}}

      - name: ✨ Check Formatting
        run: dart format --line-length ${{inputs.format_line_length}} --set-exit-if-changed ${{inputs.format_directories}}

      - name: 🕵️ Analyze
        run: flutter analyze ${{inputs.analyze_directories}}

      - name: 🧪 Run Tests
        run: flutter test --coverage

      - name: 📊 Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: ${{inputs.working_directory}}/coverage/lcov.info
          exclude: ${{inputs.coverage_excludes}}
          min_coverage: ${{inputs.min_coverage}}
  integration-android:
    needs: build
    timeout-minutes: 15
    runs-on: buildjet-2vcpu-ubuntu-2204
    strategy:
      matrix:
        api-level: [ 29 ]
        target: [ default ]
        arch: [ x86_64 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set Flutter cache variables
        shell: bash
        id: set_flutter_cache_vars
        run: |
          echo "cache_key=flutter-${{runner.os}}-stable-${{env.FLUTTER_VERSION}}-${{runner.arch}}" >> $GITHUB_OUTPUT
          cache_path="${{runner.tool_cache}}/flutter/stable-${{env.FLUTTER_VERSION}}-${{runner.arch}}"
          echo "cache_path=$(echo ${cache_path} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - name: Cache Flutter
        uses: buildjet/cache@v3
        with:
          path: ${{steps.set_flutter_cache_vars.outputs.cache_path}}
          key: ${{steps.set_flutter_cache_vars.outputs.cache_key}}-${{hashFiles('**/pubspec.lock')}}
          restore-keys: |
            ${{steps.set_flutter_cache_vars.outputs.cache_key}}
      - name: Flutter action
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: stable
          flutter-version: ${{env.FLUTTER_VERSION}}
      - name: Flutter Pub Get # get flutter packages information
        run: flutter pub get
      - name: Flutter code generation # generate any missing code from source code
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Android Emulator Runner
        uses: ReactiveCircus/android-emulator-runner@v2.28.0
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          force-avd-creation: false
          script: flutter test integration_test --flavor development --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: e2e_output
          path: e2e_output.log
  integration-web:
    timeout-minutes: 5
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64
          flutter-version: 3.13.9
      - name: Flutter Pub Get # get flutter packages information
        run: flutter pub get
      #      - uses: nanasess/setup-chromedriver@v2
      #        with:
      #          # Optional: do not specify to match Chrome's version
      #          chromedriver-version: '88.0.4324.96'
      - name: Run Chromedriver and Integration Tests
        run: |
          chromedriver --port=4444 --trace-buffer-size=100000 &
          chmod +x integration_tests.sh && ./integration_tests.sh
