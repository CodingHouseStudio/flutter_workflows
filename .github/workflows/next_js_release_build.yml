# release_build.yaml
name: Web Release Build

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      FLAVOUR:
        required: true
        type: string
        default: "production"
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      new_engine:
        required: false
        type: string
        default: "false"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ${{inputs.runs_on}} # We are using ubuntu to deploy flutter web
    timeout-minutes: 20
    environment: ${{inputs.FLAVOUR}}
    permissions: # set permissions for AWS creentials specifically
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.5
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_FRAMEWORK_VERSION }}
      - name: ðŸ“¦ Install Dependencies
        run: npm install
       # If new_engine is true, run the new command.
      - name: Build  (new engine)
        if: ${{ inputs.new_engine == 'true' }}
        run: npm run build
      # If new_engine is true, run the new command.
      - name: Build the Web static pages (new engine)
        if: ${{ inputs.new_engine == 'true' }}
        run: opennextjs-cloudflare

      # Otherwise, run the legacy build command.
      - name: Build the Web static pages (legacy)
        if: ${{ inputs.new_engine != 'true' }}
        run: npm run pages:build
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{secrets.API_TOKEN}}
          accountId: ${{secrets.ACCOUNT_ID}}
          command: pages deploy
          packageManager: npm
  notify:
    if: always() # Ensures this job runs regardless of the completion status of dependent jobs
    needs:
      - build
    uses: ./.github/workflows/notification.yml
    secrets: inherit
    with:
      job_status: ${{ needs.build.result }}
      workflow: ${{ github.workflow }}
      runs_on: ${{inputs.runs_on}}
