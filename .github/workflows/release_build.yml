# release_build.yaml
name: Release Build

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      FLAVOUR:
        required: true
        type: string
        default: "production"
      ROLE:
        required: false
        type: string
        default: "user"
      build_number:
        required: false
        type: string
        default: "$(date +%s)"
      run_sentry_plugin:
        required: true
        type: boolean
        default: true
      api_token:
        required: false
        type: string
        default: "REDACTED"
      account_id:
        required: false
        type: string
        default: "REDACTED"
      project_name:
        required: true
        type: string
        default: "veteran-production"
      directory:
        required: false
        type: string
        default: "./build/web"
      sentry_auth_token:
        required: false
        type: string
        default: "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"
      # web_renderer:
      #   required: false
      #   type: string
      #   default: "skwasm"  # Default to HTML renderer

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  #  ios-build:
  #    name: Deploy beta build to TestFlight
  #    runs-on: macOS-latest
  #    timeout-minutes: 35
  #    environment: development # We specify development since Web Production and Web Development are using the same environment variable names
  #    steps:
  #      - name: Setup Xcode version
  #        uses: maxim-lobanov/setup-xcode@v1
  #        with:
  #          xcode-version: latest-stable
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #      - name: Run Flutter tasks
  #        uses: subosito/flutter-action@v1
  #        with:
  #          flutter-version: ${{ secrets.FLUTTER_FRAMEWORK_VERSION }}
  #          channel: 'stable'
  #      - name: Flutter clean
  #        run: flutter clean
  #      - name: Flutter Pub Get
  #        run: flutter pub get
  #      - name: Build runner
  #        run: flutter pub run build_runner build --delete-conflicting-outputs
  #      - name: Setup Ruby
  #        uses: ruby/setup-ruby@v1
  #        with:
  #          ruby-version: '3.0'
  #          bundler-cache: true
  #          working-directory: 'ios'
  #      - name: Fastlane Action
  #        uses: maierj/fastlane-action@v3.0.0
  #        with:
  #          lane: 'closed_beta'
  #          subdirectory: 'ios'
  #        env:
  #          DEVELOPER_APP_IDENTIFIER: '${{ secrets.DEVELOPER_APP_IDENTIFIER }}'
  #          FASTLANE_APPLE_ID: '${{ secrets.FASTLANE_APPLE_ID }}'
  #          APPLE_ITC_TEAM_ID: '${{ secrets.APPLE_ITC_TEAM_ID }}'
  #          APPLE_TEAM_ID: '${{ secrets.APPLE_TEAM_ID }}'
  #          APPLE_KEY_ID: '${{ secrets.APPLE_KEY_ID }}'
  #          APPLE_KEY_ISSUER_ID: '${{ secrets.APPLE_KEY_ISSUER_ID }}'
  #          APPLE_APPSTORECONNECT_API_KEY: '${{ secrets.APPLE_APPSTORECONNECT_API_KEY }}'
  #          TEMP_KEYCHAIN_USER: '${{ secrets.TEMP_KEYCHAIN_USER }}'
  #          TEMP_KEYCHAIN_PASSWORD: '${{ secrets.TEMP_KEYCHAIN_PASSWORD }}'
  #          GIT_AUTHORIZATION: '${{ secrets.GIT_AUTHORIZATION }}'
  #          MATCH_PASSWORD: '${{ secrets.MATCH_PASSWORD }}'
  build:
    runs-on: ubuntu-latest # We are using ubuntu to deploy flutter web
    timeout-minutes: 20
    environment: ${{inputs.FLAVOUR}}
    permissions: # set permissions for AWS creentials specifically
      id-token: write
      contents: read
    steps:   
      - run: |
          echo "Length of the secret: ${#SECRET_TEST} characters."
        env:
          SECRET_TEST: ${{ secrets.FIREBASE_APP_CHECK }}
      - name: Stop execution if secrets are missing or empty
        env:
          sentry_dsn: ${{ secrets.SENTRY_DSN }}
          firebase_app_check: ${{ secrets.FIREBASE_APP_CHECK }}
          firebase_vapid_key: ${{ secrets.FIREBASE_VAPID_KEY }}
        if: ${{ env.sentry_dsn != null && env.sentry_dsn != '' && env.firebase_app_check != null && env.firebase_app_check != '' && env.firebase_vapid_key != null && env.firebase_vapid_key != '' }}
        run: |
          echo "Required secrets are missing or empty, stopping workflow."
          exit 1

      - name: Checkout
        uses: actions/checkout@v4.1.5
      - uses: subosito/flutter-action@v2.12.0
        with:
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64
          flutter-version: ${{ secrets.FLUTTER_FRAMEWORK_VERSION }}
      # - name: Set Version
      #   id: set_version
        
      #   run: |
      #     buildNumber=$(date +%s)
      #     echo "buildNumber=$buildNumber" >> $GITHUB_ENV
      - name: Update pubspec.yaml
        run: |
          sed -i "s/^auth_token: .*/auth_token: ${{inputs.sentry_auth_token}}/" pubspec.yaml
          sed -i "s/^version: .*/version: 1.0.2+${{inputs.build_number}}/" pubspec.yaml
      - name: ðŸ“¦ Install Dependencies
        run: flutter config --no-analytics
      - run: flutter config --no-cli-animations
      - name: Flutter Pub Get # get flutter packages information
        run: flutter pub get
      - name: Flutter code generation # generate any missing code from source code
        run: flutter pub run build_runner build --delete-conflicting-outputs
      # - name: Flutter Pub Get # get flutter packages information
      #   run: flutter pub get

      - name: Build the Web static pages # generate deployment files
        env:
          sentry_dsn: ${{ secrets.SENTRY_DSN }}
          firebase_app_check: ${{ secrets.FIREBASE_APP_CHECK }}
          firebase_vapid_key: ${{ secrets.FIREBASE_VAPID_KEY }}
        run: |
          flutter build web --release -t lib/main_${{inputs.FLAVOUR}}.dart --wasm --build-name=1.0.2 --build-number=${{inputs.build_number}} --dart-define=FLAVOUR=${{inputs.FLAVOUR}} --dart-define=ROLE=${{inputs.ROLE}} --dart-define=SENTRY_DSN=${{env.sentry_dsn}} --dart-define=FIREBASE_APP_CHECK=${{env.firebase_app_check}} --dart-define=FIREBASE_VAPID_KEY=${{env.firebase_vapid_key}} --source-maps
          mv build/web/flutter_bootstrap.js build/web/${{inputs.build_number}}.flutter_bootstrap.js
          sed "s/flutter_bootstrap.js/${{inputs.build_number}}.flutter_bootstrap.js/g" build/web/index.html >build/web/newindex.html
          mv build/web/newindex.html build/web/index.html
      - name: ðŸ“¡ Run Sentry Dart Plugin
        if: ${{inputs.run_sentry_plugin}}
        run: flutter packages pub run sentry_dart_plugin
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{inputs.api_token}}
          accountId: ${{inputs.account_id}}
          projectName: ${{inputs.project_name}}
          directory: ${{inputs.directory}}
#  android-build:
#    runs-on: ubuntu-latest
#    timeout-minutes: 30
#    environment: development # We specify development since Web Production and Web Development are using the same environment variable names
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Setup Java
#        uses: actions/setup-java@v1
#        with:
#          java-version: 12.x
#      - name: Decrypt Android keys
#        run: sh ./.github/scripts/decrypt_android_keys.sh
#        env:
#          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v1
#        with:
#          flutter-version: ${{ secrets.FLUTTER_FRAMEWORK_VERSION }}
#          channel: 'stable'
#      - name: Flutter Pub Get
#        run: flutter pub get
#      - name: Build runner
#        run: flutter pub run build_runner build --delete-conflicting-outputs
#      - name: Build Android release
#        run: flutter build appbundle --release
#      - name: Setup Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: '3.0'
#          bundler-cache: true
#          working-directory: 'android'
#      - name: Fastlane Action
#        uses: maierj/fastlane-action@v3.0.0
#        with:
#          lane: 'closed_beta'
#          subdirectory: 'android'
