# ios_cd.yaml
name: Release Build

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      api_token:
        required: false
        type: string
        default: "FIH-0pRctaX_DSMG9g-oI95wZ0Ha990EjZy5IuU_"
      account_id:
        required: false
        type: string
        default: "4e407d1da94857668f6ede7dcfeed9d5"
      project_name:
        required: true
        type: string
        default: "veteran-production"
      directory:
        required: false
        type: string
        default: "./build/web"
      run_sentry_plugin:
        required: true
        type: boolean
        default: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  #  ios-build:
  #    name: Deploy beta build to TestFlight
  #    runs-on: macOS-latest
  #    timeout-minutes: 35
  #    environment: development # We specify development since Web Production and Web Development are using the same environment variable names
  #    steps:
  #      - name: Setup Xcode version
  #        uses: maxim-lobanov/setup-xcode@v1
  #        with:
  #          xcode-version: latest-stable
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #      - name: Run Flutter tasks
  #        uses: subosito/flutter-action@v1
  #        with:
  #          flutter-version: ${{ secrets.FLUTTER_FRAMEWORK_VERSION }}
  #          channel: 'stable'
  #      - name: Flutter clean
  #        run: flutter clean
  #      - name: Flutter Pub Get
  #        run: flutter pub get
  #      - name: Build runner
  #        run: flutter pub run build_runner build --delete-conflicting-outputs
  #      - name: Setup Ruby
  #        uses: ruby/setup-ruby@v1
  #        with:
  #          ruby-version: '3.0'
  #          bundler-cache: true
  #          working-directory: 'ios'
  #      - name: Fastlane Action
  #        uses: maierj/fastlane-action@v3.0.0
  #        with:
  #          lane: 'closed_beta'
  #          subdirectory: 'ios'
  #        env:
  #          DEVELOPER_APP_IDENTIFIER: '${{ secrets.DEVELOPER_APP_IDENTIFIER }}'
  #          FASTLANE_APPLE_ID: '${{ secrets.FASTLANE_APPLE_ID }}'
  #          APPLE_ITC_TEAM_ID: '${{ secrets.APPLE_ITC_TEAM_ID }}'
  #          APPLE_TEAM_ID: '${{ secrets.APPLE_TEAM_ID }}'
  #          APPLE_KEY_ID: '${{ secrets.APPLE_KEY_ID }}'
  #          APPLE_KEY_ISSUER_ID: '${{ secrets.APPLE_KEY_ISSUER_ID }}'
  #          APPLE_APPSTORECONNECT_API_KEY: '${{ secrets.APPLE_APPSTORECONNECT_API_KEY }}'
  #          TEMP_KEYCHAIN_USER: '${{ secrets.TEMP_KEYCHAIN_USER }}'
  #          TEMP_KEYCHAIN_PASSWORD: '${{ secrets.TEMP_KEYCHAIN_PASSWORD }}'
  #          GIT_AUTHORIZATION: '${{ secrets.GIT_AUTHORIZATION }}'
  #          MATCH_PASSWORD: '${{ secrets.MATCH_PASSWORD }}'
  web_push:
    runs-on: ubuntu-latest # We are using ubuntu to deploy flutter web
    timeout-minutes: 20
    permissions: # set permissions for AWS creentials specifically
      id-token: write
      contents: read
    steps:        
      # - name: Upload source maps
      #   run: |
      #     dart run sentry_dart_plugin
      - name: ðŸ“¡ Run Sentry Dart Plugin
        if: ${{inputs.run_sentry_plugin}}
        run: flutter packages pub run sentry_dart_plugin
      # - name: Configure AWS Credentials Action for GitHub Actions
      #   uses: aws-actions/configure-aws-credentials@v4.0.1
      #   with:
      #     role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_S3_SYNC }} # we use Github OIDC authentication for this action
      #     aws-region: us-east-1
      # - name: Clean up S3 bucket
      #   run: aws s3 rm ${{ secrets.S3_WEB_BUCKET }} --recursive
      # - name: Deploy static site to S3 bucket # we will use delete option so that we can replace any of the same files
      #   run: aws s3 sync ./build/web ${{ secrets.S3_WEB_BUCKET }} --delete
      # - name: Configure AWS Credentials Action for GitHub Actions
      #   uses: aws-actions/configure-aws-credentials@v4.0.1
      #   with:
      #     role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_CLOUDFRONT_INVALIDATE }}
      #     aws-region: us-east-1
      # - name: Invalidate CloudFront
      #   run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{input.api_token}}
          accountId: ${{input.account_id}}
          projectName: ${{input.project_name}}
          directory: ${{input.directory}}
#  android-build:
#    runs-on: ubuntu-latest
#    timeout-minutes: 30
#    environment: development # We specify development since Web Production and Web Development are using the same environment variable names
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Setup Java
#        uses: actions/setup-java@v1
#        with:
#          java-version: 12.x
#      - name: Decrypt Android keys
#        run: sh ./.github/scripts/decrypt_android_keys.sh
#        env:
#          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v1
#        with:
#          flutter-version: ${{ secrets.FLUTTER_FRAMEWORK_VERSION }}
#          channel: 'stable'
#      - name: Flutter Pub Get
#        run: flutter pub get
#      - name: Build runner
#        run: flutter pub run build_runner build --delete-conflicting-outputs
#      - name: Build Android release
#        run: flutter build appbundle --release
#      - name: Setup Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: '3.0'
#          bundler-cache: true
#          working-directory: 'android'
#      - name: Fastlane Action
#        uses: maierj/fastlane-action@v3.0.0
#        with:
#          lane: 'closed_beta'
#          subdirectory: 'android'
